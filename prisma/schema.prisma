// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  dailyChordId String?  @db.ObjectId
  image        String?
  name         String?
  email        String?  @unique
  password     String?
  points       Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  accounts   Account[]
  UserChords UserChord[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  id_token          String? @db.String
  token_type        String?
  scope             String?
  id_string         String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model DailyChord {
  id    String   @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  notes String[]
  date  DateTime @default(now())

  userChords UserChord[]
}

model UserChord {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  dailyChordId String   @db.ObjectId
  attempts     Int      @default(0)
  correct      Boolean?

  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  dailyChord DailyChord @relation(fields: [dailyChordId], references: [id], onDelete: Cascade)

  @@unique([userId, dailyChordId])
}
